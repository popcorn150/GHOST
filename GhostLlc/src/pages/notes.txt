/* HTML: <div class="loader"></div> */
.loader {
  width: 60px;
  aspect-ratio: .5;
  display: grid;
}
.loader:before {
  content: "";
  width: 30%;
  aspect-ratio: 1;
  border-radius: 50%;
  margin: auto auto 0;
  background: #CF4647;
  animation: l9-0 .5s cubic-bezier(0,800,1,800) infinite;
}
.loader:after {
  content: "";
  width: 100%;
  aspect-ratio: 1/cos(30deg);
  margin: 0 auto auto;
  clip-path: polygon(50% -50%,100% 50%,50% 150%,0 50%);
  background: #524656;
  animation: l9-1 .5s linear infinite;
}
@keyframes l9-0 {
  0%,2%  {translate: 0   0%}
  98%,to {translate: 0 -.2%}
}
@keyframes l9-1 {
  0%,5%  {rotate:  0deg}
  95%,to {rotate:-60deg}
}

{/* <div>
    {account.screenShots.map((screenShot) => (
      <img key={screenShot.id} src={screenShot.img} alt="Lol" className="w-auto h-auto" />
    ))}
</div> */}


import { useEffect, useState } from "react";
import { Link } from "react-router-dom";
import availableAccounts from "../constants";
import { useSearchStore } from "../stores/searchStore";

const Category = () => {
    const { searchTerm, setSearchTerm } = useSearchStore();
    const [filteredAccounts, setFilteredAccounts] = useState(availableAccounts);
    const [currentIndex, setCurrentIndex] = useState(0);

    useEffect(() => {
        const filtered = availableAccounts.filter(account =>
            account.title.toLowerCase().includes(searchTerm.toLowerCase())
        );
        setFilteredAccounts(filtered)
    }, [searchTerm]);

    useEffect(() => {
        const interval = setInterval(() => {
            setCurrentIndex(prevIndex => (prevIndex + 1) % filteredAccounts.length);
        }, 2000);
        return () => clearInterval(interval);
    }, [filteredAccounts]);

    return (
        <div className="bg-[#161B22] min-h-screen text-white p-6">
            <input
                type="text"
                placeholder="Search accounts..."
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
                className="w-full p-2 rounded-md bg-gray-800 text-white outline-none"
            />

            <h2 className="mt-4 text-xl font-semibold">
                AVALABLE ACCOUNTS
            </h2>

            {/* Carousel */}
            <div className="relative overflow-hidden mt-4">
                <div className="flex transition-transform duration-500"
                    style={{ transform: `translateX(-${currentIndex * 100}%)` }}>
                    {filteredAccounts.map((account) => (
                        <>
                            <div key={account.id} className="min-w-full flex-shrink-0 p-3">
                                <Link to={`/account/${account.id}`} className="block bg-gray-800 p-3 rounded-lg">
                                    <img src={account.img} alt={account.title} className="rounded-lg w-full" />
                                    <h3 className="mt-2 text-sm font-semibold">{account.title}</h3>
                                    <p className="text-gray-400 text-xs mt-2">{account.views} Total Views</p>
                                </Link>
                            </div>
                        </>
                    ))}
                </div>
            </div>
        </div>
    )
}

export default Category


